clc
close all
% This section is for the game itself 
% This section is for the game itself 
% setting parameters
% s=10;          %T-cell from precursor supply rate ((mm^3/day)^-1 )
% r33=0.03;        %normal T-cell growth rate (day^-1)
Tmax=1500;     %maximum T-cell population ((mm^3)^-1)
mu=0.02;       %normal/latently infected T-cell death rate (day^-1)
% beta=0.24;     %actively infected T-cell death rate (day^-1)
% alfa=2.4;      %free virus death rate (day^-1)
% k1=0;  %T-cell infection rate by free virus (mm^3/day) 2.4*10^-5
% k2=3*10^-3;    %latent-to-active T-cell conversion rate (day^-1)
% N1=1400;        %virus produced by an active T-cell (#)
% m1=2*10^-3;     %latent-to-normal T-cell conversion rate (day^-1)

s=1; %T-cell from precursor supply rate
r33= 0.01;        %normal T-cell growth rate
% Tmax=;     %maximum T-cell population
% mu=;       %normal/latently infected T-cell death rate
beta = 0.05;    %actively infected T-cell death rate
alfa=0.01;      %free virus death rate
k1=0.7;  %T-cell infection rate by free virus
k2=0.02;    %latent-to-active T-cell conversion rate
N1=10;        %virus produced by an active T-cell
m1=0;     %latent-to-normal T-cell conversion rate

% t = 0:1:30;    
% the function/ agents / rules
% dt = 1;
% t = 0:dt:30;
% nIterations = length(t);
% 
% %vectors for ploting
% 0 = zeros(nIterations, 1);
% 1 = zeros(nIterations, 1);
% 2 = zeros(nIterations, 1);
% 3 = zeros(nIterations, 1);
% 4 = zeros(nIterations, 1);
% 
% %intial values
% 0(1) = n1;
% 1(1) = n2;
% 2(1) = n3;
% 3(1) = n4;
% 4(1) = n5;
% 
% %Functions
% for i = nIterations-1
%     1(i+1) = 1(i)+dt*(s+r33*1(i).*(1-(1(i)+2(i)+3(i))/Tmax)-mu*1(i)-k1*4(i).*1(i)+m*2(i));
%     2(i+1) = 2(i)+dt*(k1*4(i).*1(i)-mu*2(i)-k2*2(i)-m*2(i));
%     3(i+1) = 3(i)+dt*(k2*2(i)-beta*3(i));
%     4(i+1) = 4(i)+dt*(N1*beta*3(i)-k1*4(i).*1(i)-alfa*4(i));
%     end
%%%%%%%%%%%%%%%%%% r*l(i) ska tas bort

% VALUES FOR CELLS
% 0 = empty gridcells
% 1 = normal t-cell
% 2 = latent t-cell
% 3 = active t-cell
% 4 = virus

% grid
% i = 0; 
% k = 1;
% l = 2;
% m = 3;
% j33 = 4;

% CREATE PLOTS
for i = 0                      % i = [0 1 2 3 4 5]; nothing
    N = zeros(40,40);
% for n1 = 1  % 10
%     N(randperm(numel(N), n1)) = i;
% end
end

for k = 1   %T
for n2 = round(numel(N)*0.15)       % 10
N(randperm(numel(N), n2)) = k;
end 
end

for l = 2   %TL
for n3 = 0  % 100
N(randperm(numel(N), n3)) = l; %For example, randperm(6) might be [2 4 5 6 1 3].
end
end

for m=3    %TA
for n4 = 0 %100
N(randperm(numel(N), n4)) = m;
end
end

for j33=4    %virus
    for n5 = round(numel(N)*0.05)  % 50
       N(randperm(numel(N), n5)) = j33;
    end
end
%% Denna sektion skapar en rad av nollor runt matrisen.
[rader, kolumner]=size(N);
r=6*ones(rader, 1);
k=6*ones(1,kolumner+2); % +2 f?r att matrisen ska g? ihopp
% inramad a kallas N
a=[r,N,r]; % r ?r nollramen ovan och under
a=[k;a;k]; % k ?r Nollramens sidor
V1=[];
V2=[];
V3=[];
V4=[];
q = 1;
counter = 1;
for n = 1:100
    for x = 2:39
        for y = 2:39
            
l3 = rand(q);
pos1 = a(x-1,y-1);
pos2 = a(x-1,y);
pos3 = a(x-1,y+1);
pos4 = a(x,y-1);
pos5 = a(x,y+1);
pos6 = a(x+1,y-1);
pos7 = a(x+1,y);
pos8 = a(x+1,y+1);
pos9 =  a(x,y);
       
if pos9 == 1 && pos1 == 4 && l3<=k1    %bestï¿½m k1
a(x,y) = 2;
a(x-1,y-1) = 0;
end

if pos9 == 1 && pos2 == 4 && l3<=k1
a(x,y) = 2;
a(x-1,y) = 0;

end

if pos9 == 1 && pos3 == 4 && l3<=k1
a(x,y) = 2;
a(x-1,y+1)=0;

end

if pos9 == 1 && pos4 == 4 && l3<=k1
a(x,y) = 2;
a(x,y-1)=0;

end

if pos9 == 1 && pos5 == 4 && l3<=k1
a(x,y) = 2;
a(x,y+1) = 0;

end
 
if pos9 == 1 && pos6 == 4 && l3<=k1
a(x,y) = 2;
a(x+1,y-1) = 0;

end

if pos9 == 1 && pos7 == 4 && l3<=k1
a(x,y) = 2;
a(x+1,y) = 0;
end

if pos9 == 1 && pos8 == 4 && l3<=k1
a(x,y) = 2;
a(x+1,y+1) = 0;

end
end
end 
%n
% 0->T lymphatic system
[x1,j1]=find(a==0); %find out the positions of the 0 in the matrix a 
T=[x1,j1]; %save all the positions in a matrix 
q1=randsample(length(T),s); % randomly extract z positions from T. This is done by randomly choosing one row from the a matrix
subst1=[];
for i = q1
Subst1=[subst1;T(i,:)];  % 0->1
end
a(sub2ind(size(a),Subst1(:,1),Subst1(:,2)))=1;   
% 

% Growthrate
[x2,j2]=find(a==1);
[x9,j9]=find(a==0);
T7=[x2,j2];
T9=[x9,j9];
n7 =round(length(T7)*r33);     %%%%%%%%%0.03 growthrate
q7=randsample(length(T9(:,1)),n7);   % randomly extract z positions from TL. This is done by randomly choosing one row from the a matrix
subst7=[];
for i = q7
Subst7=[subst7;T9(i,:)];  % 0->1
end
a(sub2ind(size(a),Subst7(:,1),Subst7(:,2)))=1; 


% for j = 1
%     for n5 =round((size(T))*0.03)
%        N(randperm(numel(N), n5)) = j;
%     end
% end

% TL->TA
[x3,j3]=find(a==2); %find out the positions of the 2 in the matrix a 
TL=[x3,j3]; %save all the positions in a matrix 
z=round(length(TL)*k2);
q3=randsample (length(TL(:,1)),z);  % randomly extract z positions from TL. This is done by randomly choosing one row from the a matrix
subst3=[];
for i = q3
Subst3=[subst3;TL(i,:)];
end
a(sub2ind(size(a),Subst3(:,1),Subst3(:,2))) = 3; 

% TA-> 0
[x4,j4]=find(a==3);  %find out the positions of the 2 in the matrix a 
TA=[x4,j4]; 
r=round(length(TA)*beta);   % ändra /50 för stor impact på virus produktion
q4=randsample (length(TA),r); 
subst4=[];
for i=q4
Subst4=[subst4;TA(i,:)];
end
a(sub2ind(size(a),Subst4(:,1),Subst4(:,2))) = 0;  %TL dies(lysis)

% 0->virus %  TA -> Virus
[x7,j7]=find(a==0);  %find out the positions of the 2 in the matrix a 
T69=[x7,j7]; 
r69=round(r*N1); % ändra *10 för stor impact på virus produktion
q69=randsample (length(T69),r69); 
subst69=[];
for i=q69
Subst69=[subst69;T69(i,:)];
end
a(sub2ind(size(a),Subst69(:,1),Subst69(:,2))) = 4;
% virus_production = virus_production + r69;

% for j = 4    %virus 
%     for e = (r*100)     % ï¿½ndra 100 sen
%        a(randperm(numel(a(2:26 , 2:26)), e)) = j;     %problem: does not take the bounds into account, this should happen when TL dies
%     end
% end

% Virus-> 0
[x5,j5]=find(a==4);  %find out the positions of the 4 in the matrix a 
V=[x5,j5];
r2=round(length(V)*alfa);  
q5=randsample (length(V),r2); 
subst5=[];
for i=q5
Subst5=[subst5;V(i,:)];
end
a(sub2ind(size(a),Subst5(:,1),Subst5(:,2)))= 0;

%Medication
%TL-> T
[x6,j6]=find(a==2);  %find out the positions of the 4 in the matrix a 
TL1=[x6,j6];
r3=round(length(TL1)*m1);  % ï¿½ndra Medicin Term mycket och testa
q6=randsample(length(TL1),r3); 
subst6=[];
for i=q6
Subst6=[subst6;TL1(i,:)];
end
a(sub2ind(size(a),Subst6(:,1),Subst6(:,2)))= 1;

% CREATE PLOTS
figure(1)
hold on
imagesc(a)
colormap jet
colorbar 
% figure(2)
% plot(n,r69);

counter = counter + 1;

virus=sum(a==4,'all');
if virus >= 1600* 0.5
    break
elseif virus <= 1600* 0.01
    break
end


v1= sum(a==1,'all');  %calculate the number of agents on the grid
V1=[V1 v1];
v2= sum(a==2,'all'); 
V2=[V2 v2];
v3= sum(a==3,'all'); 
V3=[V3 v3];
v4= sum(a==4,'all'); 
V4=[V4 v4];

figure (2)
subplot (2,2,1)
plot (V1);

subplot (2,2,2)
plot (V2);

subplot (2,2,3)
plot (V3);

subplot (2,2,4)
plot (V4);

end

disp(counter)
% n = neighbors(a,x,y); 
% % if n = n5;
%     1 = 1*k1;
% 
% % first probability for changing of t-cells
% 
% probabilit1 = randi(2,1,1);     
%     % a 50 percent probablity represented by genereation of random integer either 1 or 2
%     % value of probabilit1 returns an int 
% if probabilit1 == 1
%     1 = 2;    % normal t-cell becomes latent t-cell
%     4 = 0;     % virus dies / disappears # OFWGKTA
%                 % HELP HELP HELP 
%                 % HOW TO MAKE SURE THAT WE DONT ERASE ALL OF 4, only targeted 4
%                 % ie. only change the one specified t-cell and kill specified virus
% end
% 
% 
% else antal==2
%     liv=a(x,y); % eftersom inga celler ?terupplivas n?r detr finns tv? grannar
% else antal==3
%     liv=1;
% else 
%     liv=0;
% end
% end

