clear	all,	close	all
%% creating a frame of zeroes around the matrix Gameoflife.
Gameoflife=498;
M=round(rand(Gameoflife , Gameoflife)); %rand=random 0-1,round=avrundning
% So now I have a 500x500 matrix of 1 (living) & 0 (dead)!
I=zeros(1,498);
J= zeros(500,1);
C= cat(1,M,I);
D= cat(1,I,C);
E= cat(2,D,J);
N= cat(2,J,E);  %The matrix is framed & called N 
[R, K]= size(N);
%% 
%mängder för varje cell
n1 = 5
n2 = 10
n3 = 50
n4 = 100
a(randperm(numel(a), n1)) = 1
a(randperm(numel(a), n2)) = 2
a(randperm(numel(a), n3)) = 3
a(randperm(numel(a), n4)) = 4

%% This section is for the game itself 

%% setting parameters
s=10;          %(mm^3/day)^-1
r=0.03;        %day^-1
Tmax=1500;     %(mm^3)^-1
mu=0.02;       %day^-1
beta=0.24;     %day^-1
alfa=2.4;      %day^-1
k1=2.4*10^-5;  %mm^3/day
k2=3*10^-3;    %day^-1
N=1400;        %#
m=2*10^-3;     %day^-1

%%  giving the agents colors

% plotroutine(A)
function plotroutine (A)
[m,n]=size(A);
[x, y] = find(A);
hold on
for K = 1 : length(x)  
    rectangle('Position', [y(K)-1, abs(x(K)-m) 1, 1], 'Linewidth', 2, 'facecolor', 'g','EdgeColor','k');
    %making the living cells green 
end
[x, y] = find(A==0); % finding dead cells
for K = 1 : length(x)  
    rectangle('Position', [y(K)-1, abs(x(K)-m) 1, 1], 'Linewidth', 2, 'facecolor', 'w','EdgeColor','k');
    %making the dead cells white 
end
for j=0:n  
    plot([j j],[0 m],'k-','Linewidth', 2),
end
for i=0:m  
    plot([0 n],[i i],'k-','Linewidth', 2)
end
axis equal
 drawnow
end

%% the function/ agents / rules

function dydt= HIV
dydt1=s+r*T(1-(y1+y2+y3)/Tmax)-mu*y-k1*V*y1+m*y2
dydt2=k1*V*y1-mu*y2-K2*y2-m*y2
dydt3=k2*y2-beta*y3
dydt4=N*beta*y3-k1*V*y1-alfa*y4
end
